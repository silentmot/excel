// This is your Prisma schema file
// Learn more: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ============================================================================
// NextAuth.js Models
// Required for authentication
// ============================================================================

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  password      String? // Added for email/password authentication
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

// ============================================================================
// ALASLA Operations Management - Dimension Tables
// Source: docs/schema.sql
// ============================================================================

model Material {
  id          Int     @id @default(autoincrement()) @map("material_id")
  name        String  @unique @db.VarChar(100)
  size        String? @db.VarChar(50)
  category    String? @db.VarChar(50)
  description String? @db.Text

  // Relations
  production DailyProduction[]
  dispatched DailyDispatched[]

  @@map("materials")
}

model Equipment {
  id   Int    @id @default(autoincrement()) @map("equipment_id")
  name String @unique @db.VarChar(100)
  type String @db.VarChar(100)

  // Relations
  usage DailyEquipmentUsage[]

  @@map("equipment")
}

model ManpowerRole {
  id        Int    @id @default(autoincrement()) @map("role_id")
  modelcode String @unique @db.VarChar(50)
  name      String @db.VarChar(100)

  // Relations
  manpower DailyManpower[]

  @@map("manpower_roles")
}

model OperationMetric {
  id   Int    @id @default(autoincrement()) @map("metric_id")
  code String @db.VarChar(50)
  name String @db.VarChar(100)
  unit String @db.VarChar(10)

  // Relations
  operations DailyOperation[]

  @@map("operation_metrics")
}

// ============================================================================
// ALASLA Operations Management - Fact Tables (Daily Data)
// These tables store time-series operational data
// ============================================================================

model DailyProduction {
  id         Int      @id @default(autoincrement()) @map("production_id")
  date       DateTime @db.Date
  materialId Int      @map("material_id")
  quantity   Decimal  @db.Decimal(10, 2)
  shift      String   @default("D&N") @db.VarChar(10)
  unit       String   @default("Ton") @db.VarChar(10)

  // Relations
  material Material @relation(fields: [materialId], references: [id], onDelete: Cascade)

  // Constraints
  @@unique([date, materialId])
  @@map("daily_production")
}

model DailyDispatched {
  id         Int      @id @default(autoincrement()) @map("dispatched_id")
  date       DateTime @db.Date
  materialId Int      @map("material_id")
  quantity   Decimal  @db.Decimal(10, 2)
  shift      String   @default("D&N") @db.VarChar(10)
  unit       String   @default("Ton") @db.VarChar(10)

  // Relations
  material Material @relation(fields: [materialId], references: [id], onDelete: Cascade)

  // Constraints
  @@unique([date, materialId])
  @@map("daily_dispatched")
}

model DailyEquipmentUsage {
  id          Int      @id @default(autoincrement()) @map("usage_id")
  date        DateTime @db.Date
  equipmentId Int      @map("equipment_id")
  hours       Decimal  @db.Decimal(5, 1)
  shift       String   @default("D&N") @db.VarChar(10)
  unit        String   @default("Hrs.") @db.VarChar(10)

  // Relations
  equipment Equipment @relation(fields: [equipmentId], references: [id], onDelete: Cascade)

  // Constraints
  @@unique([date, equipmentId])
  @@map("daily_equipment_usage")
}

model DailyManpower {
  id     Int      @id @default(autoincrement()) @map("manpower_id")
  date   DateTime @db.Date
  roleId Int      @map("role_id")
  count  Int
  shift  String   @default("D&N") @db.VarChar(10)
  unit   String   @default("Number") @db.VarChar(10)

  // Relations
  role ManpowerRole @relation(fields: [roleId], references: [id], onDelete: Cascade)

  // Constraints
  @@unique([date, roleId])
  @@map("daily_manpower")
}

model DailyOperation {
  id       Int      @id @default(autoincrement()) @map("op_id")
  date     DateTime @db.Date
  metricId Int      @map("metric_id")
  value    Decimal  @db.Decimal(10, 2)
  shift    String   @default("D&N") @db.VarChar(10)

  // Relations
  metric OperationMetric @relation(fields: [metricId], references: [id], onDelete: Cascade)

  // Constraints
  @@unique([date, metricId])
  @@map("daily_operations")
}
